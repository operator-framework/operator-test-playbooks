---
- name: "Task #3.1: Set 4.5 as a target version"
  set_fact:
    dov_cluster_ver: "4.5"
    ovol_appreg_supported: false
    ocp_range_start_old: "0"

- name: "Run only if ocp version found in annotations"
  block:

    - name: "Prints 'ocp_version_annotation_stdout'"
      debug:
        var: ocp_version_annotation_stdout

    - name: "Backward compatibility, searching (v4.5,v4.6). Please note v4.6,v4.7 will not work."
      when:
        - ocp_version_annotation_stdout is defined
        - ocp_version_annotation_stdout != "NotFound"
        - ocp_version_annotation_stdout.find("v4.5,v4.6") != -1 #found
      set_fact:
        ocp_range_start_old: "4.5"
        ovol_appreg_supported: true

    - name: "Recognize specific version if \"=\" detected"
      set_fact:
        ocp_versions: "{{ ( ocp_version_annotation_stdout ) | replace('=v','') }}"
      when:
        - ocp_version_annotation_stdout is defined
        - ocp_version_annotation_stdout != "NotFound"
        - ocp_version_annotation_stdout.find("=") != -1

    - name: "Found equals sign with 4.5"
      set_fact:
        ovol_appreg_supported: true
      when:
        - ocp_version_annotation_stdout is defined
        - ocp_version_annotation_stdout != "NotFound"
        - ocp_version_annotation_stdout.find("=") != -1
        - ocp_version_annotation is defined
        - ocp_versions is version(dov_cluster_ver, '=')
        - ocp_version_annotation_stdout.find("v4.5,v4.6") == -1

    - name: "Set specific versions if \"-\" detected"
      block:

        - name: "Set start if range or from some version defined"
          shell: "echo \"{{ ocp_version_annotation_stdout }}\"| awk -F'-' '{print $1}'|awk -F'v' '{print $2}'"
          register: ocp_range_start

        - name: "Set end when \"-\" detected"
          shell: "echo \"{{ ocp_version_annotation_stdout }}\"| awk -F'-' '{print $2}'|awk -F'v' '{print $2}'"
          register: ocp_range_end

        - name: "Add to {{ dov_cluster_ver }} list if cluster in supported range"
          set_fact:
            ovol_appreg_supported: true
          when: "(dov_cluster_ver is version(ocp_range_start.stdout, '>='))  and (dov_cluster_ver is version(ocp_range_end.stdout, '<='))"

      when:
        - ocp_version_annotation_stdout is defined
        - ocp_version_annotation_stdout != "NotFound"
        - ocp_version_annotation_stdout.find("-") != -1
        - ocp_version_annotation_stdout.find("=") == -1
        - ocp_version_annotation_stdout.find("v4.5,v4.6") == -1

    - name: "Set open range start temp, no end needed"
      set_fact:
        ocp_range_start_actual: "{{ ( ocp_version_annotation_stdout ) | replace('v','') }}"
      when:
        - ocp_version_annotation_stdout is defined
        - ocp_version_annotation_stdout != "NotFound"
        - ocp_version_annotation_stdout.find("-") == -1 # '-' not found
        - ocp_version_annotation_stdout.find("=") == -1
        - ocp_version_annotation_stdout.find("v4.5,v4.6") == -1

    - name: "Set open range start, no end needed. For old compatibility and open range also."
      set_fact:
        ocp_range_start: "{{ ocp_range_start_old if (ocp_range_start_old == '4.5') else ocp_range_start_actual }}"
      when:
        - ocp_version_annotation_stdout is defined
        - ocp_version_annotation_stdout != "NotFound"
        - ocp_version_annotation_stdout.find("-") == -1 # '-' not found
        - ocp_version_annotation_stdout.find("=") == -1
    #    - ocp_version_annotation_stdout.find("v4.5,v4.6") != -1

    - name: "Add to {{ dov_cluster_ver }} list if operator version {{ doic_versions_from_bundle }} is in cluster open range starting at {{ ocp_range_start }}"
      set_fact:
        ovol_appreg_supported: true
      when:
        - ocp_version_annotation_stdout is defined
        - ocp_version_annotation_stdout != "NotFound"
        - ocp_version_annotation_stdout.find("=") == -1
        - ocp_version_annotation_stdout.find("-") == -1 # '-' not found
        - dov_cluster_ver is version(ocp_range_start, '>=')

  when: (ocp_version_annotation_stdout is defined) and (ocp_version_annotation_stdout != "NotFound")

- name: "Supported or not, final result"
  set_fact:
    ptq_ready: true
  when: ovol_appreg_supported|bool
