---
- name: "Create directory for the binaries needed for operator testing"
  file:
    path: "{{ testing_bin_path }}"
    state: directory
  tags:
    - install
    - image_build

- name: "Set basic facts"
  set_fact:
    operator_sdk_bin_path: "{{ testing_bin_path}}/operator-sdk"
    oc_bin_path: '{{ ''kubectl'' if run_upstream else "{{ testing_bin_path }}/oc" }}'
    jq_bin_path: "{{ testing_bin_path }}/jq"
    yq_bin_path: "{{ testing_bin_path }}/yq"
    go_bin_path: "{{ testing_bin_path }}/go/bin/go"
    umoci_bin_path: "{{ testing_bin_path }}/umoci"
    # bundle_image: "{{ 'dummy' if run_upstream else '' }}"

# Install the oc client to talk to any Openshift cluster
- name: "Download and extract OpenShift client binary(oc) to {{ testing_bin_path }}"
  unarchive:
    src: "https://mirror.openshift.com/pub/openshift-v4/clients/ocp/{{ oc_version }}/openshift-client-linux-{{ oc_version }}.tar.gz"
    dest: "{{ testing_bin_path }}"
    remote_src: yes
  when: not run_upstream|bool
  tags:
    - install
    - image_build

- name: "Download and extract go binary to {{ testing_bin_path }}"
  unarchive:
    src: "https://storage.googleapis.com/golang/go{{ go_version }}.linux-amd64.tar.gz"
    dest: "{{ testing_bin_path }}"
    remote_src: yes
  tags:
    - install
    - image_build

- name: "Install operator-sdk"
  get_url:
    url: https://github.com/operator-framework/operator-sdk/releases/download/{{ operator_sdk_version }}/operator-sdk-{{ operator_sdk_version }}-x86_64-linux-gnu
    dest: "{{ operator_sdk_bin_path }}"
    mode: "0755"
  tags:
    - install
    - host_build
  when: not run_upstream|bool

- name: "Install operator-sdk"
  get_url:
#    url: https://github.com/operator-framework/operator-sdk/releases/download/{{ operator_sdk_version }}/operator-sdk_linux_amd64
    url: https://github.com/operator-framework/operator-sdk/releases/download/{{ operator_sdk_version }}/operator-sdk-{{ operator_sdk_version }}-x86_64-linux-gnu
    dest: "{{ operator_sdk_bin_path }}"
    mode: "0755"
  tags:
    - install
    - host_build
  when: run_upstream|bool

- name: "Install opm"
  get_url:
    url: https://github.com/operator-framework/operator-registry/releases/download/{{ opm_version }}/linux-amd64-opm
    dest: "{{ opm_bin_path }}"
    mode: "0755"
  tags:
    - install
    - host_build

- name: "Download jq {{ jq_version }}"
  get_url:
    url: "https://github.com/stedolan/jq/releases/download/jq-{{ jq_version }}/jq-linux64"
    dest: "{{ jq_bin_path }}"
    mode: "0755"
  tags:
    - install
    - image_build

- name: "Download yq {{ yq_version }}"
  get_url:
    url: "https://github.com/mikefarah/yq/releases/download/{{ yq_version }}/yq_linux_amd64"
    dest: "{{ yq_bin_path }}"
    mode: "0755"
  tags:
    - install
    - image_build

- name: "Install prerequisites specific to legacy operator manifest testing"
  block:
    - name: "Check if operator-courier is installed"
      shell: "operator-courier -v"
      register: operator_courier_version_result
      ignore_errors: true

    - name: "Install operator-courier if not already installed"
      shell: "pip3 install operator-courier=={{ operator_courier_version }}"
      when:
        - operator_courier_version_result.rc is defined
        - operator_courier_version_result.rc != 0

  when:
    - operator_dir is defined
    - operator_dir != ""
  tags:
    - install
    - image_build

- name: "Install prerequisites specific to operator bundle image testing"
  block:
    - name: "Check if skopeo is installed"
      shell: "skopeo -h"
      register: skopeo_help_result
      ignore_errors: true

    - name: "Install skopeo"
      block:
        - name: Generating file for install_skopeo.sh
          template:
            src: install_skopeo.sh.j2
            dest: "/tmp/install_skopeo.sh"
            mode: "0755"
          when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

        - name: "Configuring Kind with registry"
          shell: "/tmp/install_skopeo.sh"
          when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'
        - package:
            name: skopeo
            state: present
      become: true
      when:
        - skopeo_help_result.rc is defined
        - skopeo_help_result.rc != 0

    - name: "Check if umoci is installed"
      shell: "{{ umoci_bin_path }} -h"
      register: umoci_help_result
      ignore_errors: true

    - name: "Install umoci if not installed"
      get_url:
        url: "https://github.com/opencontainers/umoci/releases/download/{{ umoci_version }}/umoci.amd64"
        dest: "{{ umoci_bin_path }}"
        mode: "0755"
      when:
        - umoci_help_result.rc is defined
        - umoci_help_result.rc != 0
  when:
    - bundle_image is defined
    - bundle_image != ""
  tags:
    - install
    - image_build
